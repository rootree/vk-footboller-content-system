<?php

$championships = array(

'353' => 'Интерлига',

'76' => 'Бразилия. Чемпионат штата Рио-де-Жанейро',
'75' => 'Бразилия. Чемпионат штата Сан-Паулу',


'-17' => 'Кубок UEFA',
'481' => 'Кубок Азии',
'472' => 'Кубок Америки',
'173' => 'Кубок Африки',
'-25' => 'Кубок Интертото',
'104' => 'Кубок конфедераций',
'74' => 'Кубок Либертадорес',
'865' => 'Лига Европы',
'528' => 'Лига чемпионов Азии',

'-16' => 'Лига чемпионов УЕФА',
'382' => 'Мужчины. Олимпиада-2008',
'705' => 'ОИ-2008. Азия. Отборочные матчи',
'858' => 'Первенство России среди ЛФК. Московская область "А"',
'-5' => 'Рейтинг (коэффициенты) клубов UEFA',
'-4' => 'Рейтинг (коэффициенты) федераций UEFA',
'-3' => 'Рейтинг сборных FIFA',
'556' => 'Сборные. Gold Cup',
'554' => 'Средиземноморские Игры',

'614' => 'ЧЕ',
'407' => 'ЧЕ. До 19 лет',
'540' => 'ЧЕ. До 21 года',
'557' => 'Молодежное первенство России',
'78' => 'Чемпионат MLS (США)',
'756' => 'Чемпионат Австралии. VPL',
'618' => 'Чемпионат Австралии. А-Лига',
'15' => 'Чемпионат Австрии',
'485' => 'Чемпионат Австрии. 1-я лига',

'2' => 'Чемпионат Англии. Премьер-Лига',
'71' => 'Чемпионат Англии. Чемпион-Лига',
'351' => 'Чемпионат Англии. 1-я лига',
'441' => 'Чемпионат Англии. 2-я лига',
'536' => 'Чемпионат Англии. Конференция',
'14' => 'Чемпионат Аргентины',
'396' => 'Чемпионат Беларуси',
'9' => 'Чемпионат Бельгии',
'695' => 'Чемпионат Болгарии',

'103' => 'Чемпионат Бразилии',
'5' => 'Чемпионат Германии',
'32' => 'Чемпионат Германии. 2-я бундеслига',
'772' => 'Чемпионат Германии. 3-я бундеслига',
'8' => 'Чемпионат Голландии',
'559' => 'Чемпионат Голландии. 2-й дивизион',
'12' => 'Чемпионат Греции',
'18' => 'Чемпионат Дании',
'615' => 'Чемпионат Израиля. Премьер-Лига',

'348' => 'Чемпионат Ирландии',
'610' => 'Чемпионат Ирландии. 1-й дивизион',
'401' => 'Чемпионат Исландии',
'861' => 'Чемпионат Исландии. 2-й дивизион',
'7' => 'Чемпионат Испании',
'65' => 'Чемпионат Испании. 2-й дивизион',
'6' => 'Чемпионат Италии',
'72' => 'Чемпионат Италии. Серия "Б"',
'437' => 'Чемпионат Мексики',

'69' => 'Чемпионат Норвегии',
'263' => 'Чемпионат Польши',
'11' => 'Чемпионат Португалии',
'33' => 'Чемпионат России. Премьер-Лига',
'77' => 'Чемпионат России. 1-й дивизион',
'462' => 'Чемпионат России. 2-й дивизион. Восток',
'330' => 'Чемпионат России. 2-й дивизион. Запад',
'400' => 'Чемпионат России. 2-й дивизион. Урал-Поволжье',
'394' => 'Чемпионат России. 2-й дивизион. Центр',

'461' => 'Чемпионат России. 2-й дивизион. Юг',
'605' => 'Чемпионат Румынии',
'435' => 'Чемпионат Северной Ирландии',
'592' => 'Чемпионат Сингапура',
'408' => 'Чемпионат Словакии',
'10' => 'Чемпионат Турции',
'1' => 'Чемпионат Украины',
'912' => 'Чемпионат Украины. 1-я лига',
'444' => 'Чемпионат Уэльса',

'37' => 'Чемпионат Финляндии',
'60' => 'Чемпионат Франции',
'66' => 'Чемпионат Франции. 2-й дивизион',
'608' => 'Чемпионат Франции. 3-й дивизион',
'427' => 'Чемпионат Хорватии',
'13' => 'Чемпионат Чехии',
'16' => 'Чемпионат Швейцaрии. Суперлига',
'486' => 'Чемпионат Швейцарии. 1-й дивизион',
'70' => 'Чемпионат Швеции',

'470' => 'Чемпионат Швеции. 2-й дивизион',
'4' => 'Чемпионат Шотландии. Премьер-Лига',
'171' => 'Чемпионат Шотландии. 1-й дивизион',
'-551' => 'Чемпионат Южной Америки. До 20 лет',
'595' => 'Чемпионат Южной Кореи',
'392' => 'Чемпионат Японии',
'516' => 'ЧМ-2006. Отборочные матчи',
'717' => 'ЧМ-2010. Отборочные матчи',
'551' => 'ЧМ. До 20 лет',

'590' => 'ЧМ. Финальная часть',
'105' => 'Южноамериканский кубок'
)
;
 /*
$lines = file('./championats.csv');

// Loop through our array, show HTML source as HTML source; and line numbers too.
foreach ($lines as $line_num => $line) {

	$champ = explode(";", $line); 
	
	$cMegaTitle = trimBadSimbols($champ[0]);
	
	$whatfind = searchInExitsChamps($cMegaTitle);
	
	if(is_array($whatfind)){
		echo $champ[0] . '  ' . $champ[3] . "\n";
	}
	
}

function searchInExitsChamps($whatSearchChamp){
	
	global $championships ;
	
	foreach ($championships as $cId => $cTitle) { 
		echo $whatSearchChamp . '  ' . $cTitle . "\n";
		if(trimBadSimbols($cTitle) == $whatSearchChamp){
			return $championships[$cId];
		}
	}
 
}

function trimBadSimbols($string){
	$string = detectBadLatters($string);
	$string = str_replace(" ", "", $string);
	$string = str_replace("&", " ", $string);
	return $string;
}



function detectBadLatters($target){

	$latters = array(
		'e' => 'е',
		'y' => 'у',
		'o' => 'о',
		'p' => 'р',
		'a' => 'а',
		'c' => 'с'
	);
	
	foreach ($latters as $en => $ru ){
		$target = str_replace($en, $ru, $target); 
	}
	
	$target = urlencode($target);
	$target = str_replace('+', '%A0', $target); 
	$target = urldecode($target);
	
	return $target;
	
}

exit();


*/







foreach($championships as $ch_key => $ch_title){
	$url = 'http://results.marathonbet.com/sportstat.php?nr1=5&razd='.$ch_key.'#';
	
 
	$data = file_get_contents($url);
if(strstr($data, '<b>Группа A</b>') 
	|| strstr($data, '1/2 финала') 
	|| strstr($data, 'Плей-офф') 
	){ 
		continue;
	}
	echo 'insert into cups_store (cp_id, cp_name, cp_used) values("' . $ch_key . '", "'. mysql_escape_string($ch_title) . '", 1);'. PHP_EOL;
	
 
	
}
 

exit();

$weUserThis = array();

foreach($championships as $ch_key => $ch_title){

	$url = 'http://results.marathonbet.com/sportstat.php?nr1=5&razd='.$ch_key.'#';
	
	echo PHP_EOL . $ch_title . PHP_EOL;
	
	$data = file_get_contents($url);
  
	if(strstr($data, '<b>Группа A</b>') 
	|| strstr($data, '1/2 финала') 
	|| strstr($data, 'Плей-офф') 
	){
		echo 'Пропускаем ... ' . PHP_EOL;
		continue;
	}

	$matches = array();
	preg_match_all("/<font color=.*?>(.*?)<a onclick=\"makeWnd2\('(.*?)'\);\" target='(.*?)' href=\"(.*?)\"><font color = (.*?)>(.*?)<\/font><\/a>\040+([0-9]+)\040+([0-9]+)\040+([0-9]+)\040+([0-9]+).*?<\/font>/ms", $data, $matches, PREG_PATTERN_ORDER);
	
	$commands = array();
	
	foreach($matches[4] as $key => $trash){
	
		echo detectBadLatters($matches[6][$key]) . PHP_EOL;

		$id = substr($matches[4][$key], (strrpos($matches[4][$key],',') + 1));
		$commands[$id] = array(
			'title' => detectBadLatters($matches[6][$key]),
			'link' => $matches[4][$key],
			'win' => $matches[8][$key],
			'tie' => $matches[9][$key],
			'lesion' => $matches[10][$key], 
			'ch_key' => $ch_key,
			'ch_title' => detectBadLatters($ch_title),
			'id' => $id
		);
	}
	
	$weUserThis[$ch_key] = array(
		'title' => $ch_title,
		'commands' => $commands
	);
	
}

?>
